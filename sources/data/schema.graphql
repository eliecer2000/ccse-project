# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Choice {
  id: String!
  text: String!
}

type Tasks @model @auth(rules: [{ allow: public }]) {
  task: Int! @primaryKey
  title: String!
  description: String
  questions: [Questions!]! @hasMany(indexName: "byTask", fields: ["task"])
}

type Questions @model @auth(rules: [{ allow: public }]) {
  code: Int! @primaryKey
  task: Int! @index(name: "byTask", sortKeyFields: ["code"])
  text: String!
  choices: [Choice!]!
  correctChoiceId: String!
  topicTags: [String!]
}

type Exam @model @auth(rules: [{ allow: public }]) {
  id: ID! @index(name: "byTask", sortKeyFields: ["userId"])
  userId: ID!
  status: StatusExam!
  totalSuccess: Int!
  totalFail: Int!
  examQuestions: [ExamQuestions] @hasMany(indexName: "byExam", fields: ["id"])
}

type ExamQuestions @model @auth(rules: [{ allow: public }]) {
  code: Int! @primaryKey(sortKeyFields: ["examId"])
  examId: ID! @index(name: "byExam", sortKeyFields: ["code"])
  statusQuestionExam: StatusQuestionExam!
  responseAsk: String
  question: Questions @hasOne(fields: ["code"])
}

enum StatusExam {
  PENDING
  SUCCESS
}

enum StatusQuestionExam {
  PENDING
  SUCCEED
  FAILED
}
